datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  dream         Dream?

  // The list of all top-level owned projects.
  ownedProjects Project[] @relation("UserOwnedProjects")

  // The list of all projects where the user has been invited to participate.
  joinedProjects Project[] @relation("ProjectMembers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles String @default("general")
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Project {
  id        String @id @default(uuid())
  // This will unique within the set of projects for a given user.
  code      String
  name      String

  defaultMemory String?
  defaultStory  String?
  defaultDream  String?

  // All the dreams of the project
  dreams Dream[]

  // Backlink to the owner user.
  ownerId String
  owner   User   @relation("UserOwnedProjects", fields: [ownerId], references: [id])

  // Backlink to all the joined users.
  members User[] @relation("ProjectMembers")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MagicCode {
  id     String @id @unique
}

model Style {
  id      String @id @unique
  pattern String
}

model DreamTheme {
  id          String @id @unique
  theme       String
  description String
}

model PromptTemplate {
  id          String @id @unique
  template    String
}

model Dream {
  id            String    @id @default(cuid())
  memory        String
  story         String
  dreamImage    String
  prompt        String

  projectId     String
  project       Project @relation(fields: [projectId], references: [id])

  userId        String @unique
  user          User @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
}
